from nose.tools import *
from src.verifier import *


def test_gen_input():
    test_strings_passing = ['9 3 3 40',
                            '9  3 3 40',
                            '9 3 3 40 ',
                            '16\n4\n4\n90',
                            '16\n4\n4\n90\n'
                            ]
    test_strings_failing = ['asdfa',
                            'as df ed fd',
                            '9 a 3 40',
                            '9 3 4 5',
                            '12 34 5',
                            '9 3 3 40 5',
                            '9 3 3 40\n16 4 4 50'
                            ]
    for case in test_strings_passing:
        assert_true(gen_input(case))

    for case in test_strings_failing:
        assert_false(gen_input(case))


def test_board_default():
    test_strings_passing = ["""6 2 3
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """6 2 3
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5
3 1 3
3 0 0
0 0 2
1 3 0
7 7 1
1 2 3 4 5 6 7
1 2 3 4 5 6 7
1 2 3 4 5 6 7
1 2 3 4 5 6 7
1 2 3 4 5 6 7
1 2 3 4 5 6 7
1 2 3 4 5 6 7
"""

                            ]

    test_strings_failing = ["""6 2 3 5
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """9 3 3
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """a b c
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """6 2 3
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5 0 6
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """6 2 3
5 0 0 3 0 0
0 0 2 0 0 4
4 3 0 0 5
0 0 1 2 0 0
1 0 0 0 4 0
0 2 0 0 1 5""",
                            """6 2 3
9 9 9 9 9 9
9 9 9 9 9 9
9 9 9 9 9 9
9 9 9 9 9 9
9 9 9 9 9 9
9 9 9 9 9 9""",
                            ]

    for case in test_strings_passing:
        assert_true(board_default(case))

    for case in test_strings_failing:
        assert_false(board_default(case))


def test_board_inline():
    test_strings_passing = [
"""52...6.........7.13...........4..8..6......5...........418.........3..2...87.....
4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......
48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5....""",
"""52...6.........7.13...........4..8..6......5...........418.........3..2...87....."""
                            ]

    test_strings_failing = [
"""52...6.........7.13........4..8..6......5...........418.........3..2...87.....""",
"""52...6.........7.13...........4..8..6......5...........418.........3..2...87...3454..""",
"""52...6.........7.13...........4..8..6......5...........418.........3..2...87.....
4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......
48.3............71.2.......7.5......2..8.............1.76...3.....4......5....""",
"""52...6.........7.13...........4..8..6......5...........418.........3..2...87.....
4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......
asdfb
48.3............71.2.......7.5....6....2..8.............1.76...3.....4......5...."""
                            ]

    for case in test_strings_passing:
        assert_true(board_inline(case))

    for case in test_strings_failing:
        assert_false(board_inline(case))